TC: O(N)
SC: O(N)

#include <unordered_set>

class Solution {
  public:
    Node *removeDuplicates(Node *head) {
        if (!head) return nullptr; // Edge case: empty list

        unordered_set<int> seen;
        Node *curr = head;
        Node *prev = nullptr;

        while (curr) {
            if (seen.count(curr->data)) {
                // Remove duplicate node
                prev->next = curr->next;
                delete curr;  // Free memory
                curr = prev->next; // Move to next node
            } else {
                // Insert unique value into the set
                seen.insert(curr->data);
                prev = curr;
                curr = curr->next;
            }
        }
        return head;
    }
};
