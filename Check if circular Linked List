TC: O(N)
SC: O(1)

class Solution {
public:
    bool isCircular(Node* head) {
        // If the list is empty, return false (an empty list is not circular)
        if(!head) 
            return false;
        
        Node* slow = head;
        Node* fast = head->next;
        
        // Traverse the list with slow and fast pointers
        while(fast && fast->next) {
            if(slow == fast) {
                return true;  // Circular list detected
            }
            slow = slow->next;
            fast = fast->next->next;
        }
        
        return false;  // If fast pointer reaches end, it's not circular
    }
};
